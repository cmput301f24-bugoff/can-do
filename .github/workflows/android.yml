name: Android CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    # Cache Gradle dependencies to speed up builds
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Create google-services.json
      run: |
        echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test  # Build without running tests

  unit-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --tests "com.bugoff.can_do.*" --info --stacktrace

  android-ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3.2.2
        with:
          sdk-version: 35
          build-tools-version: 35.0.0

      # Accept licenses and enable KVM
      - name: Enable KVM and accept licenses
        run: |
          echo "y" | sdkmanager --licenses
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          sudo adduser $USER kvm

      # Install system image
      - name: Install Android system image
        run: |
          echo "Installing system image"
          sdkmanager "system-images;android-35;google_apis;x86_64"
          echo "y" | sdkmanager --licenses

      # Create and start AVD
      - name: Create and start AVD
        run: |
          echo "Creating AVD"
          echo no | avdmanager create avd -n test_device -k "system-images;android-35;google_apis;x86_64" --force
          echo "Starting Android Emulator"
          $ANDROID_HOME/emulator/emulator -avd test_device -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect &
          echo "Waiting for emulator to start..."
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
          echo "Emulator started"

      # Run UI Tests
      - name: Run UI Tests
        run: ./gradlew connectedAndroidTest

  generate-javadoc:

    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Javadoc
        run: ./gradlew generateJavadoc

      # DO NOT DEPLOY / PUBLISH Javadoc here
