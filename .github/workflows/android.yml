name: Android CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    # Cache Gradle dependencies to speed up builds
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Create google-services.json
      run: |
        echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test  # Build without running tests

  unit-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --tests "com.bugoff.can_do.*" --info --stacktrace

  android-ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3.2.2
        with:
          sdk-version: 35
          build-tools-version: 35.0.0

      # Accept licenses before installing anything
      - name: Accept SDK Licenses and Install Emulator
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install "emulator"
          yes | sdkmanager --install "platform-tools"
          yes | sdkmanager --install "platforms;android-35"
          yes | sdkmanager --install "system-images;android-35;google_apis;x86_64"

      # Create AVD and verify it exists
      - name: Create and verify AVD
        run: |
          echo "Creating AVD..."
          echo "no" | avdmanager create avd \
            --name "test_device" \
            --package "system-images;android-35;google_apis;x86_64" \
            --device "pixel_6"
          echo "Verifying AVD..."
          avdmanager list avd
          echo "Starting emulator..."
          nohup $ANDROID_HOME/emulator/emulator \
            -avd test_device \
            -no-audio \
            -no-window \
            -no-boot-anim \
            -gpu swiftshader_indirect \
            -memory 2048 \
            -accel on &

      # Wait for emulator to be ready
      - name: Wait for Emulator
        timeout-minutes: 10
        run: |
          echo "Waiting for emulator to start..."
          $ANDROID_HOME/platform-tools/adb wait-for-device shell \
            'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'
          echo "Emulator started"
          adb devices

      # Run UI Tests
      - name: Run UI Tests
        run: ./gradlew connectedAndroidTest

  generate-javadoc:

    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create google-services.json
        run: |
          echo "$GOOGLE_SERVICES_JSON" > "$GITHUB_WORKSPACE/app/google-services.json"
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Javadoc
        run: ./gradlew generateJavadoc

      # DO NOT DEPLOY / PUBLISH Javadoc here
